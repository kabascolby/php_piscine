docker run  --name msqldb -p 3306:3306 -e MYSQL_ROOT_PASSWORD admin2019 mysql
docker exec -it ms bash
mysql -u root -padmin2019

CREATE USER 'root'@'10.113.3.12' IDENTIFIED BY 'admin2019';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'10.113.3.12';
FLUSH PRIVILEGES;
create database storedb; 
create user shopper idenfied by 'shoppass';
grant all privileges on storedb to shopper;

DROP TABLE users;

docker-machine create 'anyName'

eval $(docker-machine env 'anyName')

docker volume create --driver local --name=hatchery

docker run -d --restart=on-failure -v hatchery:/var/lib/mysql --name=mysql_server -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=db_'CurrentUser' mysql --default-authentication-plugin=mysql_native_password

docker run -d --name=roach-warden -p 8081:80 --link=mysql_server:mysql -e PMA_HOST=mysql_server phpmyadmin/phpmyadmin

you can then use to enter the machine.
    docker exec -it mysql_server bash
        mysql -p 
            password

you can then go to your docker address to view phpmyadmin. 
    `http://"192.168.99.100":8081` username: root | password: password
address is equivalent to docker-machine ip 'anyName' + phpmyadmin port. 

docker-machine create 'anyName'

eval $(docker-machine env 'anyName')

docker volume create --driver local --name=hatchery

docker run -d --restart=on-failure -v hatchery:/var/lib/mysql --name=mysql_server -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=db_'CurrentUser' mysql --default-authentication-plugin=mysql_native_password

docker run -d --name=roach-warden -p 8081:80 --link=mysql_server:mysql -e PMA_HOST=mysql_server phpmyadmin/phpmyadmin

you can then use to enter the machine.
    docker exec -it mysql_server bash
        mysql -p 
            password

you can then go to your docker address to view phpmyadmin. 
    `http://"192.168.99.100":8081` username: root | password: password
address is equivalent to docker-machine ip 'anyName' + phpmyadmin port. 